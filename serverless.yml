---
plugins:
  - serverless-domain-manager

service:
  name: flightaware-flight-info

frameworkVersion: '>=1.0.0'

provider:
  name: aws
  runtime: ruby2.7
  region: ${env:AWS_REGION, 'us-east-2'}
  memorySize: 1024
  deploymentBucket:
    name: ${env:SERVERLESS_BUCKET_NAME}
  deploymentPrefix: serverless
  apiKeys:
    - default_key_${env:ENVIRONMENT}
  tracing:
    apiGateway: true
  ecr:
    images:
      app:
        uri: ${file(./secrets/ecr_repository)}/${env:TF_VAR_app_name}:app-${self.custom.architecture}

package:
  include:
    - lib/**
    - bin/**
    - vendor/**
  exclude:
    - include/**
    - scripts/**
    - secrets/**
    - infra/**
    - docker-compose.*
    - .terraform/**
    - spec/**
    - .env*

functions:
  ping:
    memorySize: 128
    image:
      name: app
      command: bin/flight-info.get_ping
    events:
      - http:
          path: ping
          method: get
  test_internet_access:
    memorySize: 512
    timeout: 30
    image:
      name: app
      command: bin/flight-info.test_internet_access
    events:
      - http:
          path: testInternetAccess
          method: get
          private: true
  flight_info:
    timeout: 30
    memorySize: 512
    image:
      name: app
      command: bin/flight-info.get_flight_info
    events:
      - http:
          path: flightInfo
          method: get
          private: true

custom:
  architecture: arm64
  enableCustomDomain:
    develop: false
    v1: true
  customDomain:
    stage: v1
    domainName: ${env:DOMAIN_PATH}.${env:DOMAIN_TLD}
    certificateArn: ${file(./secrets/certificate_arn)}
    basePath: 'v1'
    createRoute53Record: true
    enabled: ${self:custom.enableCustomDomain.${opt:stage, self:provider.stage}}
