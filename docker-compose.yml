version: '2.2'
services:
  vendor:
    build:
      context: .
    entrypoint: sh
    volumes:
      - "$PWD/vendor:/vendor"
    command:
      - -c
      - >-
        bundle install &&
        cp -R /usr/local/bundle /vendor &&
        chmod -R +x /vendor/bundle/bin
  selenium-x86_64:
    image: selenium/standalone-chrome
    environment:
      ENVIRONMENT: test
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - 4444:4444
      - 5901:5900
  selenium-arm64:
    image: seleniarm/standalone-chromium
    environment:
      ENVIRONMENT: test
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - 4444:4444
      - 5901:5900
  ruby:
    build:
      context: .
      args:
        ENVIRONMENT: test
    env_file: .env
    entrypoint: sh
    command:
      - "-c"
      - "not meant to be run with the stack"

  # You will need to vendor your dependencies first before running unit tests.
  # scripts/unit does this for you automatically.
  unit:
    extends: ruby
    entrypoint: vendor/bundle/bin/rspec
    environment:
      LOAD_PATH: "spec/unit;spec;lib"
      GEM_PATH: "vendor/bundle"
    volumes:
      - /dev/null:/dev/shm
    command:
      - --tag
      - unit
      - --fail-fast
      - --format
      - documentation
  integration:
    extends: ruby
    entrypoint: rspec
    env_file: .env
    environment:
      LOAD_PATH: "/app/spec/unit;/app/spec;/app/lib"
      SELENIUM_HOST: "$SELENIUM_HOST"
      SELENIUM_PORT: "$SELENIUM_PORT"
    volumes:
      - "$PWD/secrets:/secrets"
    command:
      - --tag
      - integration
      - --fail-fast
      - --format
      - documentation

