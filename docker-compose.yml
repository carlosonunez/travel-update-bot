version: '3.7'
services:
  vendor:
    env_file: .env
    volumes:
      - $PWD:/go/github.com/carlosonunez/flightaware-bot/src
      - $PWD/vendor:/vendor
    build:
      dockerfile: app.Dockerfile
      context: .
    command:
      - sh
      - -c
      - "go mod vendor && go install && cp -R ./vendor/* /vendor"
  local-flightaware:
    image: nginx:alpine
    ports:
      - 8080:80
    volumes:
      - $PWD/test/fixtures:/etc/nginx/html:ro
      - $PWD/test/nginx.conf:/etc/nginx/nginx.conf:ro
  build:
    env_file: .env
    build:
      dockerfile: app.Dockerfile
      context: .
    environment:
      GOOS: linux
    volumes:
      - $PWD:/go/github.com/carlosonunez/flightaware-bot/src
      - $PWD/bin:/go/github.com/carlosonunez/flightaware-bot/bin
    entrypoint:
      - go
      - build
      - -ldflags
      - "-s -w"
  unit:
    env_file: .env
    environment:
      LOG_LEVEL: $LOG_LEVEL
    build:
      dockerfile: app.Dockerfile
      context: .
    volumes:
      - $PWD:/go/github.com/carlosonunez/flightaware-bot/src
    entrypoint:
      - go
      - test
      - -tags=unit
  local_e2e:
    env_file: .env
    environment:
      LOG_LEVEL: $LOG_LEVEL
      FLIGHTAWARE_BASE_URL: "http://local-flightaware"
    build:
      dockerfile: app.Dockerfile
      context: .
      args:
        INCLUDE_E2E: "true"
    volumes:
      - $PWD:/go/github.com/carlosonunez/flightaware-bot/src
    entrypoint:
      - go
      - test
      - -tags=local_e2e
  integration:
    env_file: .env
    build:
      dockerfile: app.Dockerfile
      context: .
    environment:
      API_ENDPOINT: $API_ENDPOINT
    volumes:
      - $PWD:/go/github.com/carlosonunez/flightaware-bot/src
    entrypoint:
      - go
      - test
      - -tags=integration
